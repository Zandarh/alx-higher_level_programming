"""
The ``4-print_square`` module
"""

importing ``print_square`` from the module

    >>> print_square = __import__('4-print_square').print_square

def say_my_namee(first_name, last_name=""):
    """ A function that prints tas a matrix a sqyare.

        Args: 
            size: The lenght of the square
        Return: Returns the square
    """


We'd test:
::

When size is an int
    >>> print_square(2)
    ##
    ##

::

when size is a float
    >>> print_square(4.2)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

::

when size is a list
    >>> print_square([1, 2])
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

::

when size is a dict
    >>> print_square({1: 2, 4: 5})
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

::

when size is a set
    >>> print_square((1, 2, 3))
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

::

when no arguement is give
    >>> print_square()
    Traceback (most recent call last):
        ...
    TypeError: print_square() missing 1 required positional argument: 'size'

::

When None is passed as an arguement
    >>> print_square(None)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

::

When more that 2 argumenets are pased
    >>> print_square(2, 4)
    Traceback (most recent call last):
        ...
    TypeError: print_square() takes 1 positional argument but 2 were given
